trigger:
  branches:
    include:
      - main
  tags:
    include:
      - v*
      - refs/tags/v*

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    # mac:
    #  imageName: 'macos-latest'
    # windows:
    #   imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

variables:
  COVERALLS_REPO_TOKEN: $(CoverallsToken)

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "^18.18.0"
    displayName: "Install Node.js"

  - bash: |
      sudo apt-get update
      sudo apt-get -y install curl g++ libcurl4-openssl-dev libncurses5-dev make cmake git tar 
    displayName: "Install dependencies via apt-get"
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

  - bash: |
      git clone https://github.com/realnc/frobtads.git
      cd frobtads
      ./configure
      mkdir build
      cd build
      cmake ..
      cmake --build . --target install 
      sudo make install
    displayName: "Fetch, build and install the latest version of frobtads"
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))
    
# TODO: build for tads3 for mac & windows
# condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
# condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))

  - bash: |
      /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      echo ">>> Started xvfb"
    displayName: Start xvfb
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

  - bash: |
      # echo ">>> Compile vscode-test"
      yarn --ignore-engines && yarn compile 
      # echo ">>> Compiled vscode-test"

      echo ">>> Run unit tests test"
      yarn coverage
      echo ">>> Unit tests finished"

      echo ">>> Publish coverage to coveralls"
      npx coveralls < ./coverage/lcov.info

    displayName: Run Tests
    env:
      COVERALLS_REPO_TOKEN: $(CoverallsToken)
      DISPLAY: ":99.0"

  - bash: |
      echo ">>> Publish"
      yarn deploy
    displayName: Publish
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Agent.OS'], 'Linux'))
    env:
      VSCE_PAT: $(BUILDSECRET)
