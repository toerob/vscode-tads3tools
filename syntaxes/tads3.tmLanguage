<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>t</string>
	</array>
	<key>name</key>
	<string>TADS 3 Source File</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#top</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>//.*$</string>
					<key>name</key>
					<string>comment.line.double-slash.tads3</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.tads3</string>
				</dict>
			</array>
		</dict>
		<key>grammar</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([A-Za-z_][A-Za-z0-9_]*)\s*\(</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;=\.)([A-Za-z_][A-Za-z0-9_]*)</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bclass\b</string>
					<key>name</key>
					<string>storage.type.class.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bdelegated\b</string>
					<key>name</key>
					<string>keyword.operator.delegated.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bdictionary\b</string>
					<key>name</key>
					<string>storage.type.dictionary.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\benum\b</string>
					<key>name</key>
					<string>storage.type.enum.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bextern\b</string>
					<key>name</key>
					<string>storage.modifier.extern.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bexport\b</string>
					<key>name</key>
					<string>storage.modifier.export.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfunction\b</string>
					<key>name</key>
					<string>storage.type.function.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\binherited\b</string>
					<key>name</key>
					<string>keyword.operator.inherited.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bintrinsic\b</string>
					<key>name</key>
					<string>storage.type.intrinsic.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\blocal\b</string>
					<key>name</key>
					<string>storage.type.local.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bmethod\b</string>
					<key>name</key>
					<string>storage.type.method.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bmodify\b</string>
					<key>name</key>
					<string>storage.modifier.modify.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bmultimethod\b</string>
					<key>name</key>
					<string>storage.modifier.multimethod.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnew\b</string>
					<key>name</key>
					<string>keyword.operator.new.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnil\b</string>
					<key>name</key>
					<string>constant.other.nil.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bobject\b</string>
					<key>name</key>
					<string>keyword.other.object.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\boperator\b</string>
					<key>name</key>
					<string>storage.type.operator.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bproperty\b</string>
					<key>name</key>
					<string>storage.type.property.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bpropertyset\b</string>
					<key>name</key>
					<string>storage.type.propertyset.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\breplace\b</string>
					<key>name</key>
					<string>storage.modifier.replace.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\breplaced\b</string>
					<key>name</key>
					<string>keyword.operator.replaced.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bstatic\b</string>
					<key>name</key>
					<string>keyword.other.static.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btemplate\b</string>
					<key>name</key>
					<string>storage.type.template.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btransient\b</string>
					<key>name</key>
					<string>storage.modifier.transient.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btrue\b</string>
					<key>name</key>
					<string>constant.other.true.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bbreak\b</string>
					<key>name</key>
					<string>keyword.control.break.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bcase\b</string>
					<key>name</key>
					<string>keyword.control.case.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bcatch\b</string>
					<key>name</key>
					<string>keyword.control.catch.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bcontinue\b</string>
					<key>name</key>
					<string>keyword.control.continue.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bdefault\b</string>
					<key>name</key>
					<string>keyword.control.default.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bdo\b</string>
					<key>name</key>
					<string>keyword.control.do.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bif\b</string>
					<key>name</key>
					<string>keyword.control.if.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\belse\b</string>
					<key>name</key>
					<string>keyword.control.else.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfinally\b</string>
					<key>name</key>
					<string>keyword.control.finally.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfor\b</string>
					<key>name</key>
					<string>keyword.control.for.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bforeach\b</string>
					<key>name</key>
					<string>keyword.control.foreach.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bgoto\b</string>
					<key>name</key>
					<string>keyword.control.goto.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\breturn\b</string>
					<key>name</key>
					<string>keyword.control.return.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bswitch\b</string>
					<key>name</key>
					<string>keyword.control.switch.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bthrow\b</string>
					<key>name</key>
					<string>keyword.control.throw.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btry\b</string>
					<key>name</key>
					<string>keyword.control.try.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bwhile\b</string>
					<key>name</key>
					<string>keyword.control.while.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bargcount\b</string>
					<key>name</key>
					<string>entity.other.argcount.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bdefiningobj\b</string>
					<key>name</key>
					<string>entity.other.definingobj.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bself\b</string>
					<key>name</key>
					<string>entity.other.self.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btargetobj\b</string>
					<key>name</key>
					<string>entity.other.targetobj.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btargetprop\b</string>
					<key>name</key>
					<string>entity.other.targetprop.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\binvokee\b</string>
					<key>name</key>
					<string>entity.other.invokee.tads3</string>
				</dict>


			</array>
		</dict>
		<key>literals-numeric</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
(?:0|[1-9][0-9]*) (?:(?:\.[0-9]*)? [Ee][+-]? [0-9]+ | \.[0-9]*) |
\.[0-9]+ (?:[Ee][+-]? [0-9]+)?
</string>
					<key>name</key>
					<string>constant.numeric.float.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>0[0-7]+(?![0-9])</string>
					<key>name</key>
					<string>constant.numeric.octal.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>0[0-9]+</string>
					<key>name</key>
					<string>invalid.illegal.bad-octal.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>0[Xx][0-9A-Fa-f]+</string>
					<key>name</key>
					<string>constant.numeric.hexadecimal.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>0(?![0-9])|[1-9][0-9]*</string>
					<key>name</key>
					<string>constant.numeric.decimal.tads3</string>
				</dict>
			</array>
		</dict>
		<key>literals-regex</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>R"{3,}</string>
					<key>end</key>
					<string>"{3,}</string>
					<key>name</key>
					<string>string.quoted.triple.double.regex.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\["']+</string>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>R'{3,}</string>
					<key>end</key>
					<string>'{3,}</string>
					<key>name</key>
					<string>string.quoted.triple.single.regex.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\["']+</string>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>R"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.regex.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>R'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.regex.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>literals-strings-interpolated</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"{3,}</string>
					<key>end</key>
					<string>"{3,}</string>
					<key>name</key>
					<string>string.quoted.triple.double.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>&lt;&lt;</string>
							<key>end</key>
							<string>&gt;&gt;</string>
							<key>name</key>
							<string>source.tads3.embedded.source</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#interpolated-expression-tokens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#tokens</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\\["']+</string>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tags-in-triple-double</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'{3,}</string>
					<key>end</key>
					<string>'{3,}</string>
					<key>name</key>
					<string>string.quoted.triple.single.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>&lt;&lt;</string>
							<key>end</key>
							<string>&gt;&gt;</string>
							<key>name</key>
							<string>source.tads3.embedded.source</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#interpolated-expression-tokens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#tokens</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\\["']+</string>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tags-in-triple-single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>&lt;&lt;</string>
							<key>end</key>
							<string>&gt;&gt;</string>
							<key>name</key>
							<string>source.tads3.embedded.source</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#interpolated-expression-tokens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#tokens</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tags-in-double</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>&lt;&lt;</string>
							<key>end</key>
							<string>&gt;&gt;</string>
							<key>name</key>
							<string>source.tads3.embedded.source</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#interpolated-expression-tokens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#tokens</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tags-in-single</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>literals-strings-simple</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"{3,}</string>
					<key>end</key>
					<string>"{3,}</string>
					<key>name</key>
					<string>string.quoted.triple.double.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\["']+</string>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tags-in-triple-double</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'{3,}</string>
					<key>end</key>
					<string>'{3,}</string>
					<key>name</key>
					<string>string.quoted.triple.single.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\["']+</string>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tags-in-triple-single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tags-in-double</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tags-in-single</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tokens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.\.\.</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.\.</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\{</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\}</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\]</string>
				</dict>
				<dict>
					<key>match</key>
					<string>==</string>
					<key>name</key>
					<string>keyword.operator.eq.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assign.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\?\?</string>
					<key>name</key>
					<string>keyword.operator.conditional-short.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\?</string>
					<key>name</key>
					<string>keyword.operator.conditional.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>:</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+=</string>
					<key>name</key>
					<string>keyword.operator.assign.add.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+\+</string>
					<key>name</key>
					<string>keyword.operator.increment.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+</string>
					<key>name</key>
					<string>keyword.operator.add.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-=</string>
					<key>name</key>
					<string>keyword.operator.assign.subtract.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--</string>
					<key>name</key>
					<string>keyword.operator.decrement.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-&gt;</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-</string>
					<key>name</key>
					<string>keyword.operator.subtract.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*=</string>
					<key>name</key>
					<string>keyword.operator.assign.multiply.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*</string>
					<key>name</key>
					<string>keyword.operator.multiply.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>/=</string>
					<key>name</key>
					<string>keyword.operator.assign.divide.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>/</string>
					<key>name</key>
					<string>keyword.operator.divide.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%=</string>
					<key>name</key>
					<string>keyword.operator.assign.modulo.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>keyword.operator.modulo.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;=</string>
					<key>name</key>
					<string>keyword.operator.ge.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;&gt;=</string>
					<key>name</key>
					<string>keyword.operator.assign.shift-right.arithmetical.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;&gt;&gt;=</string>
					<key>name</key>
					<string>keyword.operator.assign.shift-right.logical.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;&gt;&gt;</string>
					<key>name</key>
					<string>keyword.operator.shift-right.logical.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;&gt;</string>
					<key>name</key>
					<string>keyword.operator.shift-right.arithmetical.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;</string>
					<key>name</key>
					<string>keyword.operator.gt.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;=</string>
					<key>name</key>
					<string>keyword.operator.le.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&lt;=</string>
					<key>name</key>
					<string>keyword.operator.assign.shift-left.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&lt;</string>
					<key>name</key>
					<string>keyword.operator.shift-left.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;</string>
					<key>name</key>
					<string>keyword.operator.lt.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;&amp;</string>
					<key>name</key>
					<string>keyword.operator.logical.and.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;=</string>
					<key>name</key>
					<string>keyword.operator.assign.and.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;</string>
					<key>name</key>
					<string>keyword.operator.bitwise.and.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|\|</string>
					<key>name</key>
					<string>keyword.operator.logical.or.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|=</string>
					<key>name</key>
					<string>keyword.operator.assign.or.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.operator.bitwise.or.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\^=</string>
					<key>name</key>
					<string>keyword.operator.assign.xor.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\^</string>
					<key>name</key>
					<string>keyword.operator.bitwise.xor.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!=</string>
					<key>name</key>
					<string>keyword.operator.ne.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!</string>
					<key>name</key>
					<string>keyword.operator.logical.not.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>~</string>
					<key>name</key>
					<string>keyword.operator.bitwise.not.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>@</string>
				</dict>
				<dict>
					<key>match</key>
					<string>##</string>
					<key>name</key>
					<string>keyword.operator.preprocessor.token-paste.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>#@</string>
					<key>name</key>
					<string>keyword.operator.preprocessor.stringize.single.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>#</string>
					<key>name</key>
					<string>keyword.operator.preprocessor.stringize.double.tads3</string>
				</dict>
			</array>
		</dict>
		<key>preprocessor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.charset.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.charset.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(charset)\s*("[^"]*")$</string>
					<key>name</key>
					<string>meta.preprocessor.charset.tads3</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
^\s*\#\s*(define)\s+ ([A-Za-z_][A-Za-z0-9_]*)
\((?:
  (?:\s*  ([A-Za-z][A-Za-z0-9_]*)  )\s*
  (?:,\s* ([A-Za-z_][A-Za-z0-9_]*) \s*)*
)?\)
</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.define.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.preprocessor.tads3</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.preprocessor.tads3</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.preprocessor.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.define.function.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tokens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*#\s*(define)\s+([A-Za-z_][A-Za-z0-9_]*)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.define.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.preprocessor.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.define.simple.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tokens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*#\s*(error)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.error.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.error.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#preprocessor-tokens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*#\s*(ifdef)\s+([A-Za-z_][A-Za-z0-9_]*)\s*$</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.ifdef.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.function.preprocessor.ifdef.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^\s*#\s*(endif)\s*$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.endif.tads3</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.preprocessor.if-block.ifdef.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#top</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#preprocessor-cond</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*#\s*(ifndef)\s+([A-Za-z_][A-Za-z0-9_]*)\s*$</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.ifndef.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.function.preprocessor.ifndef.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^\s*#\s*(endif)\s*$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.endif.tads3</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.preprocessor.if-block.ifndef.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#top</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#preprocessor-cond</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*#\s*(if)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.ifdef.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.function.preprocessor.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^\s*#\s*(endif)\s*$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.endif.tads3</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.preprocessor.if-block.if.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;!if)</string>
							<key>end</key>
							<string>(?=^\s*#\s*endif\s*$)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#top</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#preprocessor-cond</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string></string>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#preprocessor-tokens</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.include.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.include.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(include)\s*("[^"]*")\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.include.double.tads3</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.include.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.quoted.other.lt-gt.include.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(include)\s*(&lt;[^"]*&gt;)\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.include.lt-gt.tads3</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.line.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.line.tads3</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.line.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(line)\s+(0|[1-9][0-9]*)\s*('[^']*')\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.line.tads3</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*#\s*(pragma)\s+(message)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma-message.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.pragma.tads3.message</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#preprocessor-tokens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma-newline-spacing.tads3</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma-newline-spacing-value.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^(?x)\s*\#\s* (pragma) \s+ (newline_spacing) \s*\(\s*
  (collapse|delete|preserve|on|off)
\s*\)\s*$
</string>
					<key>name</key>
					<string>meta.preprocessor.pragma.tads3.newline-spacing</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma-stg.tads3</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma-stg-value.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(pragma)\s+(sourceTextGroup)\s*\(\s*(on|off)\s*\)\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.pragma.tads3.stg</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma-once.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(pragma)\s*(once)\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.pragma.tads3.once</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.pragma-all-once.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(pragma)\s*(all_once)\s*[\+\-]\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.pragma.tads3.all-once</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.undef.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.function.preprocessor.undef.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(undef)\s*([A-Za-z_][A-Za-z0-9_]*)\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.undef.tads3</string>
				</dict>
			</array>
		</dict>
		<key>preprocessor-cond</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.else.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*#\s*(else)\s*$</string>
					<key>name</key>
					<string>meta.preprocessor.else.tads3</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*#\s*(elif)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.preprocessor.elif.tads3</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.preprocessor.elif.tads3</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#preprocessor-tokens</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>preprocessor-tokens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbols</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-regex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-strings-simple</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
			</array>
		</dict>
		<key>string-escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
\\(?:
  [\\&lt;&gt;"'\^v bnrt] | # simple ones
  u[0-9A-Fa-f]{4} |  # 4-digit hex
  x[0-9A-Fa-f]{2} |  # 2-digit hex
  [0-7]{3}           # 3-digit octal
)
</string>
					<key>name</key>
					<string>constant.character.escape.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
(\\(?:[^\\&lt;&gt;"'\^v bnrtux0-7] | # not one of valid continuations
  u(?![0-9A-Fa-f]) | u[0-9A-Fa-f] (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{2} (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{3} (?![0-9A-Fa-f]) | # bad 4-digit hex
  [0-7] (?![0-7]) | [0-7]{2} (?![0-7]) | # bad 3-digit octal
  x(?![0-9A-Fa-f]) | x[0-9A-Fa-f] (?![0-9A-Fa-f]) # bad 2-digit hex
))
</string>
					<key>name</key>
					<string>invalid.illegal.bad-escape.tads3</string>
				</dict>
			</array>
		</dict>
		<key>symbols</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[A-Za-z_][A-Za-z0-9_]*\b</string>
				</dict>
			</array>
		</dict>
		<key>tags-common</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>&lt;(?:\\.)?/([A-Za-z\\.]+)&gt;</string>
					<key>name</key>
					<string>meta.tag.html.end.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\{[A-Za-z0-9/ \-_]*\}</string>
					<key>name</key>
					<string>meta.tag.curly.tads3</string>
				</dict>
			</array>
		</dict>
		<key>tags-in-double</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tags-common</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.bad-escape.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
&lt;([A-Za-z\.]+)\b(?:             # tag name, followed by...
[^\\"&lt;&gt;]                        # a safe char...
(\\(?:                          # or a good escape...
  [\\&lt;&gt;"'\^v bnrt] | # simple ones
  u[0-9A-Fa-f]{4} |  # 4-digit hex
  x[0-9A-Fa-f]{2} |  # 2-digit hex
  [0-7]{3}           # 3-digit octal
)) |                            # or a bad escape.
(\\(?:[^\\&lt;&gt;"'\^v bnrtux0-7] | # not one of valid continuations
  u(?![0-9A-Fa-f]) | u[0-9A-Fa-f] (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{2} (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{3} (?![0-9A-Fa-f]) | # bad 4-digit hex
  [0-7] (?![0-7]) | [0-7]{2} (?![0-7]) | # bad 3-digit octal
  x(?![0-9A-Fa-f]) | x[0-9A-Fa-f] (?![0-9A-Fa-f]) # bad 2-digit hex
)))*&gt;
</string>
					<key>name</key>
					<string>meta.tag.html.begin.tads3</string>
				</dict>
			</array>
		</dict>
		<key>tags-in-single</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tags-common</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.bad-escape.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
&lt;([A-Za-z\.]+)\b(?:             # tag name, followed by...
[^\\'&lt;&gt;]                        # a safe char...
(\\(?:                          # or a good escape...
  [\\&lt;&gt;"'\^v bnrt] | # simple ones
  u[0-9A-Fa-f]{4} |  # 4-digit hex
  x[0-9A-Fa-f]{2} |  # 2-digit hex
  [0-7]{3}           # 3-digit octal
)) |                            # or a bad escape.
(\\(?:[^\\&lt;&gt;"'\^v bnrtux0-7] | # not one of valid continuations
  u(?![0-9A-Fa-f]) | u[0-9A-Fa-f] (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{2} (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{3} (?![0-9A-Fa-f]) | # bad 4-digit hex
  [0-7] (?![0-7]) | [0-7]{2} (?![0-7]) | # bad 3-digit octal
  x(?![0-9A-Fa-f]) | x[0-9A-Fa-f] (?![0-9A-Fa-f]) # bad 2-digit hex
)))*&gt;
</string>
					<key>name</key>
					<string>meta.tag.html.begin.tads3</string>
				</dict>
			</array>
		</dict>
		<key>tags-in-triple-double</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tags-common</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.bad-escape.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
&lt;([A-Za-z\.]+)\b(?:             # tag name, followed by...
[^\\"&lt;&gt;] | "(?!") | ""(?!") |   # a safe char, or a non-closing quote...
(\\(?:                          # or a good escape...
  [\\&lt;&gt;\^v bnrt]  | # simple ones
  u[0-9A-Fa-f]{4} | # 4-digit hex
  x[0-9A-Fa-f]{2} | # 2-digit hex
  [0-7]{3} |        # 3-digit octal
  ["']+             # special triple-quote escape
)) |                            # or a bad escape.
(\\(?:[^\\&lt;&gt;"'\^v bnrtux0-7] | # not one of valid continuations
  u(?![0-9A-Fa-f]) | u[0-9A-Fa-f] (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{2} (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{3} (?![0-9A-Fa-f]) | # bad 4-digit hex
  [0-7] (?![0-7]) | [0-7]{2} (?![0-7]) | # bad 3-digit octal
  x(?![0-9A-Fa-f]) | x[0-9A-Fa-f] (?![0-9A-Fa-f]) # bad 2-digit hex
)))*&gt;
</string>
					<key>name</key>
					<string>meta.tag.html.begin.tads3</string>
				</dict>
			</array>
		</dict>
		<key>tags-in-triple-single</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tags-common</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.tads3</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.tads3</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.bad-escape.tads3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
&lt;([A-Za-z\.]+)\b(?:             # tag name, followed by...
[^\\'&lt;&gt;] | '(?!') | ''(?!') |   # a safe char, or a non-closing quote...
(\\(?:                          # or a good escape...
  [\\&lt;&gt;\^v bnrt]  | # simple ones
  u[0-9A-Fa-f]{4} | # 4-digit hex
  x[0-9A-Fa-f]{2} | # 2-digit hex
  [0-7]{3} |        # 3-digit octal
  ["']+             # special triple-quote escape
)) |                            # or a bad escape.
(\\(?:[^\\&lt;&gt;"'\^v bnrtux0-7] | # not one of valid continuations
  u(?![0-9A-Fa-f]) | u[0-9A-Fa-f] (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{2} (?![0-9A-Fa-f]) |
    u[0-9A-Fa-f]{3} (?![0-9A-Fa-f]) | # bad 4-digit hex
  [0-7] (?![0-7]) | [0-7]{2} (?![0-7]) | # bad 3-digit octal
  x(?![0-9A-Fa-f]) | x[0-9A-Fa-f] (?![0-9A-Fa-f]) # bad 2-digit hex
)))*&gt;
</string>
					<key>name</key>
					<string>meta.tag.html.begin.tads3</string>
				</dict>
			</array>
		</dict>

		<key>interpolated-expression-tokens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>if\s*[^>]+</string>
					<key>name</key>
					<string>keyword.control.interpolated.if.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>end</string>
					<key>name</key>
					<string>keyword.control.interpolated.end.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>one of</string>
					<key>name</key>
					<string>keyword.control.interpolated.oneof.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>or</string>
					<key>name</key>
					<string>keyword.control.interpolated.or.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>stopping</string>
					<key>name</key>
					<string>keyword.control.interpolated.stopping.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>at random</string>
					<key>name</key>
					<string>keyword.control.interpolated.atrandom.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>shuffled</string>
					<key>name</key>
					<string>keyword.control.interpolated.shuffled.tads3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>cycling</string>
					<key>name</key>
					<string>keyword.control.interpolated.cycling.tads3</string>
				</dict>
			</array>
		</dict>

		<key>tokens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#grammar</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbols</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-regex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals-strings-interpolated</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
			</array>
		</dict>
		<key>top</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#preprocessor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tokens</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.tads3</string>
	<key>uuid</key>
	<string>5171c4a6-0129-4dc0-88a9-7aa4127d6b5d</string>
</dict>
</plist>
